//= depend_on_asset "modal_form.html"
//= depend_on_asset "modal_details.html"

var app = angular.module('app', ['ui.bootstrap','ui.sortable','datetimepicker','ngResource', 'ngAnimate','ngCookies'])
    .config([
      'datetimepickerProvider',
      function (datetimepickerProvider) {
        datetimepickerProvider.setOptions({
          locale: 'en',
          format: "MM/DD/YYYY",
          inline: true
        });
      }
    ]);
app.factory('VanRouteService', ['$resource', VanRouteService]);

function VanRouteService($resource) {
  return $resource('/van_routes/:collectionRoute/:id.json', null,
      {
        'copy': {method: 'GET', isArray: true, params: {collectionRoute: 'copy'}}
      });
}

app.factory('WorkAssignmentService', ['$resource', WorkAssignmentService]);

function WorkAssignmentService($resource) {
  return $resource('/work_assignments/:id.json');
}

app.directive('ngReallyClick', [function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      element.bind('click', function() {
        var message = attrs.ngReallyMessage;
        if (message && confirm(message)) {
          scope.$apply(attrs.ngReallyClick);
        }
      });
    }
  }
}]);
app.service('ModalFormService', ['$modal',
    function ($modal) {

        var modalDefaults = {
            backdrop: true,
            keyboard: true,
            modalFade: true,
            templateUrl: '<%= asset_path("modal_form.html") %>'
        };

        var modalOptions = {
            closeButtonText: 'Cancel',
            actionButtonText: 'Create',
            headerText: 'New Student',
            bodyText: 'Enter a new student name.',
            formLabel: 'Student Name:'
        };

        this.showModal = function (customModalDefaults, customModalOptions) {
            if (!customModalDefaults) customModalDefaults = {};
            customModalDefaults.backdrop = 'static';
            return this.show(customModalDefaults, customModalOptions);
        };

        this.show = function (customModalDefaults, customModalOptions) {
            //Create temp objects to work with since we're in a singleton service
            var tempModalDefaults = {};
            var tempModalOptions = {};

            //Map angular-ui modal custom defaults to modal defaults defined in service
            angular.extend(tempModalDefaults, modalDefaults, customModalDefaults);

            //Map modal.html $scope custom properties to defaults defined in service
            angular.extend(tempModalOptions, modalOptions, customModalOptions);

            if (!tempModalDefaults.controller) {
                tempModalDefaults.controller = function ($scope, $modalInstance) {
                    $scope.modalOptions = tempModalOptions;
                    $scope.modalOptions.ok = function (result) {
                        $modalInstance.close(result);
                    };
                    $scope.modalOptions.close = function (result) {
                        $modalInstance.dismiss('cancel');
                    };
                }
            }

            return $modal.open(tempModalDefaults).result;
        };

    }]
);
app.service('ModalDetailsService', ['$modal',
    function ($modal) {

        var modalDefaults = {
            backdrop: true,
            keyboard: true,
            modalFade: true,
            templateUrl: '<%= asset_path("modal_details.html") %>'
        };

        var modalOptions = {
            closeButtonText: 'Close',
            headerText: 'Work Assignment Grades',
            bodyText: 'Following are the PowerSchool grades for the clicked work assignment',
            tableData: {}
        };

        this.showModal = function (customModalDefaults, customModalOptions) {
            if (!customModalDefaults) customModalDefaults = {};
            customModalDefaults.backdrop = 'static';
            return this.show(customModalDefaults, customModalOptions);
        };

        this.show = function (customModalDefaults, customModalOptions) {
            //Create temp objects to work with since we're in a singleton service
            var tempModalDefaults = {};
            var tempModalOptions = {};

            //Map angular-ui modal custom defaults to modal defaults defined in service
            angular.extend(tempModalDefaults, modalDefaults, customModalDefaults);

            //Map modal.html $scope custom properties to defaults defined in service
            angular.extend(tempModalOptions, modalOptions, customModalOptions);

            if (!tempModalDefaults.controller) {
                tempModalDefaults.controller = function ($scope, $modalInstance) {
                    $scope.modalOptions = tempModalOptions;
                    $scope.modalOptions.close = function () {
                        $modalInstance.dismiss('cancel');
                    };
                }
            }

            return $modal.open(tempModalDefaults).result;
        };

    }]
);